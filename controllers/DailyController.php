<?php
/**
 * Created by PhpStorm.
 * User: zhoutian
 * Date: 2019/3/23
 * Time: 15:03
 */

namespace app\controllers;


use app\behaviors\DepartmentBehavior;
use app\behaviors\LoginBehavior;
use app\logic\TaskForm;
use app\models\Department;
use app\models\Task;
use app\models\TaskRecord;
use app\models\User;
use yii\data\Pagination;
use yii\helpers\Url;
use yii\web\UrlManager;

class DailyController extends Controller
{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function behaviors()
    {
        return [
            'access' => [
                'class' => LoginBehavior::className(),
            ]
        ];
    }

    public function actionIndex()
    {
        $department = \Yii::$app->request->get('department');
        $username = \Yii::$app->request->get('username');
        $content = \Yii::$app->request->get('content');
        $result = \Yii::$app->request->get('result');
        $departmentList = Department::getVisibleDepartment();
        $departmentList = [];
        $query = Task::find()->alias('t');
        $query->leftJoin(['u' => User::tableName()], 'u.id = t.user_id');
        if ($department && $departmentList[$department]) {
            $query->where(['u.department' => $department]);
            if ($username)
                $query->andWhere(['like', 'u.realname', $username]);
        } else {
            $query->where(['u.id' => \Yii::$app->user->id]);
        }
        if ($result)
            $query->andWhere(['result' => $result]);
        if ($content)
            $query->andwhere(['like', 't.content', $content]);
        $pagination = new Pagination(['totalCount' => $query->count(), 'defaultPageSize' => 20]);
        $query->orderBy('t.updated_at desc')->select('u.*,t.*');
        $list = $query->offset($pagination->offset)->limit($pagination->limit)->asArray()->all();
        foreach ($list as $k => $v) {
            $list[$k]['records'] = TaskRecord::find()->where(['task_id' => $v['id']])->orderBy('id desc')->all();
        }
        $params = \Yii::$app->request->getQueryParams();
        return $this->render('daily', [
            'list' => $list,
            'departmentList' => $departmentList,
            'pagination' => $pagination,
            'params' => $params,
            'results' => \Yii::$app->params['result']
        ]);
    }

    public function actionEdit()
    {
        if (\Yii::$app->request->isPost) {
            $taskForm = new TaskForm();
            $taskForm->attributes = \Yii::$app->request->post();
            $taskForm->user_id = \Yii::$app->user->id;
            $taskForm->records = \Yii::$app->request->post('records');
            $taskForm->oldRecords = \Yii::$app->request->post('oldRecords');
            $taskForm->save();
            return $this->redirect(['daily/detail', 'id' => $taskForm->id]);
        }
        $id = \Yii::$app->request->get('id');
        $task = Task::findOne([
            'id' => $id,
            'user_id' => \Yii::$app->user->id,
        ]);
        return $this->render('daily-edit', [
            'task' => $task,
            'results' => \Yii::$app->params['result']
        ]);
    }

    public function actionDetail()
    {
        $id = \Yii::$app->request->get('id');
        $task = Task::findOne($id);
        $visible = $task->user_id == \Yii::$app->user->id;
        if (!$visible)
            exit('permission denied');
        return $this->render('daily-detail', [
            'task' => $task
        ]);
    }

    public function actionDelete()
    {
        $id = \Yii::$app->request->get('id');
        $task = Task::findOne([
            'id' => $id
        ]);
        if (!$task) {
            return $this->renderJson([
                'code' => 404,
                'msg' => '任务不存在'
            ]);
        }
        if ($task->user_id != \Yii::$app->user->id) {
            return $this->renderJson([
                'code' => 403,
                'msg' => '不能删除他人任务'
            ]);
        }
        $task->delete();
        return $this->renderJson([
            'code' => 200,
            'msg' => "删除成功"
        ]);
    }
}